// <auto-generated />
using System;
using IntranetInstituto.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntranetInstituto.Migrations
{
    [DbContext(typeof(InstitutoDBContext))]
    [Migration("20200623221521_DBlightver")]
    partial class DBlightver
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IntranetInstituto.Models.Alumno", b =>
                {
                    b.Property<int>("NroLegajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodCarrera")
                        .HasColumnType("int");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroDocumento")
                        .HasColumnType("int");

                    b.HasKey("NroLegajo");

                    b.HasIndex("CodCarrera");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Carrera", b =>
                {
                    b.Property<int>("CodCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodCarrera");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("IntranetInstituto.Models.CarreraMateria", b =>
                {
                    b.Property<int>("CodCarrera")
                        .HasColumnType("int");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int");

                    b.HasKey("CodCarrera", "CodMateria");

                    b.HasIndex("CodMateria");

                    b.ToTable("CarrerasMaterias");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Curso", b =>
                {
                    b.Property<int>("NroLegajo")
                        .HasColumnType("int");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("NroLegajo", "CodMateria");

                    b.HasIndex("CodMateria");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Materia", b =>
                {
                    b.Property<int>("CodMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodMateria");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Alumno", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Carrera", "Carrera")
                        .WithMany("Alumnos")
                        .HasForeignKey("CodCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntranetInstituto.Models.CarreraMateria", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Carrera", "Carrera")
                        .WithMany("CarrerasMaterias")
                        .HasForeignKey("CodCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntranetInstituto.Models.Materia", "Materia")
                        .WithMany("CarrerasMaterias")
                        .HasForeignKey("CodMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntranetInstituto.Models.Curso", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Materia", "Materia")
                        .WithMany("Cursos")
                        .HasForeignKey("CodMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntranetInstituto.Models.Alumno", "Alumno")
                        .WithMany("Cursos")
                        .HasForeignKey("NroLegajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
