// <auto-generated />
using System;
using IntranetInstituto.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntranetInstituto.Migrations
{
    [DbContext(typeof(InstitutoDBContext))]
    [Migration("20200617045757_MigracionEspecialidadFix")]
    partial class MigracionEspecialidadFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IntranetInstituto.Models.Alumno", b =>
                {
                    b.Property<int>("NroLegajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodCurso")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroDocumento")
                        .HasColumnType("int");

                    b.HasKey("NroLegajo");

                    b.HasIndex("CodCurso");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("IntranetInstituto.Models.AlumnoMateria", b =>
                {
                    b.Property<int>("NroLegajo")
                        .HasColumnType("int");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int");

                    b.Property<byte>("NotaPrimerTrimestre")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NotaSegundoTrimestre")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NotaTercerTrimestre")
                        .HasColumnType("tinyint");

                    b.HasKey("NroLegajo", "CodMateria");

                    b.HasIndex("CodMateria");

                    b.ToTable("AlumnosMaterias");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Curso", b =>
                {
                    b.Property<int>("CodCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Capacidad")
                        .HasColumnType("tinyint");

                    b.Property<int>("CodEspecialidad")
                        .HasColumnType("int");

                    b.Property<byte>("Nivel")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodCurso");

                    b.HasIndex("CodEspecialidad");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("IntranetInstituto.Models.CursoProfesor", b =>
                {
                    b.Property<int>("CodCurso")
                        .HasColumnType("int");

                    b.Property<int>("ProfesorId")
                        .HasColumnType("int");

                    b.HasKey("CodCurso", "ProfesorId");

                    b.HasIndex("ProfesorId");

                    b.ToTable("CursosProfesores");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Especialidad", b =>
                {
                    b.Property<int>("CodEspecialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodEspecialidad");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("IntranetInstituto.Models.EspecialidadMateria", b =>
                {
                    b.Property<int>("CodEspecialidad")
                        .HasColumnType("int");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int");

                    b.HasKey("CodEspecialidad", "CodMateria");

                    b.ToTable("EspecialidadesMaterias");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Materia", b =>
                {
                    b.Property<int>("CodMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodMateria");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Profesor", b =>
                {
                    b.Property<int>("ProfesorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodMateria")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NroDocumento")
                        .HasColumnType("int");

                    b.HasKey("ProfesorId");

                    b.HasIndex("CodMateria");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("IntranetInstituto.Models.Alumno", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Curso", "Curso")
                        .WithMany("Alumnos")
                        .HasForeignKey("CodCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntranetInstituto.Models.AlumnoMateria", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Materia", "Materia")
                        .WithMany("AlumnoMaterias")
                        .HasForeignKey("CodMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntranetInstituto.Models.Alumno", "Alumno")
                        .WithMany("AlumnoMaterias")
                        .HasForeignKey("NroLegajo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntranetInstituto.Models.Curso", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("CodEspecialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntranetInstituto.Models.CursoProfesor", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Curso", "Curso")
                        .WithMany("CursoProfesores")
                        .HasForeignKey("CodCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntranetInstituto.Models.Profesor", "Profesor")
                        .WithMany("CursoProfesores")
                        .HasForeignKey("ProfesorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntranetInstituto.Models.EspecialidadMateria", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Especialidad", "Especialidad")
                        .WithMany("EspecialidadMaterias")
                        .HasForeignKey("CodEspecialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntranetInstituto.Models.Materia", "Materia")
                        .WithMany("EspecialidadMaterias")
                        .HasForeignKey("CodEspecialidad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IntranetInstituto.Models.Profesor", b =>
                {
                    b.HasOne("IntranetInstituto.Models.Materia", "Materia")
                        .WithMany("Profesores")
                        .HasForeignKey("CodMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
